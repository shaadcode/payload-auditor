// commitlint.config.cjs
/** @type {import('cz-git').UserConfig} */
module.exports = {
  rules: {
    'body-max-line-length': [0, 'always', 100],
  },
  prompt: {
    messages: {
      type: "Select the type of change that you're committing:",
      scope: 'Denote the SCOPE of this change (optional):',
      customScope: 'Denote the SCOPE of this change:',
      subject: 'Write a SHORT, IMPERATIVE tense description of the change:\n',
      body: 'Provide a LONGER description of the change (optional). Use "|" to break new line:\n',
      breaking: 'List any BREAKING CHANGES (optional). Use "|" to break new line:\n',
      footerPrefixSelect: 'Select the ISSUES type of changeList by this change (optional):',
      customFooterPrefix: 'Input ISSUES prefix:',
      footer: 'List any ISSUES by this change. E.g.: #31, #34:\n',
      generatingByAI: 'Generating your AI commit subject...',
      generatedSelectByAI: 'Select suitable subject by AI generated:',
      confirmCommit: 'Are you sure you want to proceed with the commit above?',
    },
    types: [
      { value: 'feat', name: 'feat:     A new feature', emoji: ':sparkles:' },
      { value: 'fix', name: 'fix:      A bug fix', emoji: ':bug:' },
      { value: 'docs', name: 'docs:     Documentation only changes', emoji: ':memo:' },
      {
        value: 'style',
        name: 'style:    Changes that do not affect the meaning of the code',
        emoji: ':lipstick:',
      },
      {
        value: 'refactor',
        name: 'refactor: A code change that neither fixes a bug nor adds a feature',
        emoji: ':recycle:',
      },
      { value: 'perf', name: 'perf:     A code change that improves performance', emoji: ':zap:' },
      {
        value: 'test',
        name: 'test:     Adding missing tests or correcting existing tests',
        emoji: ':white_check_mark:',
      },
      {
        value: 'build',
        name: 'build:    Changes that affect the build system or external dependencies',
        emoji: ':package:',
      },
      {
        value: 'ci',
        name: 'ci:       Changes to CI/CD configuration or automation tools',
        emoji: ':ferris_wheel:',
      },
      {
        value: 'chore',
        name: "chore:    Other changes that don't modify src or test files",
        emoji: ':hammer:',
      },
      { value: 'revert', name: 'revert:   Reverts a previous commit', emoji: ':rewind:' },
    ],
    scopes: [
      {
        name: 'core - Core logic of the plugin, such as logging, hooks, and storage',
        value: 'core',
      },
      {
        name: 'logger - Managing the logging system (e.g., log structure, display, filters, and cleanup)',
        value: 'logger',
      },
      {
        name: 'config - Changes to plugin configuration or global settings',
        value: 'config',
      },
      {
        name: 'cli - Changes to the command-line interface or custom commands',
        value: 'cli',
      },
      {
        name: 'hooks - Changes to the hooks system and Payload lifecycle connections',
        value: 'hooks',
      },
      {
        name: 'jobs - Changes related to job queues or scheduled tasks (e.g., auto cleanup)',
        value: 'jobs',
      },
      { name: 'ui - Changes to the Payload admin panel UI', value: 'ui' },
      {
        name: 'docs - Updating or improving documentation (e.g., README, guides)',
        value: 'docs',
      },
      { name: 'testing - Adding or correcting tests', value: 'testing' },
      {
        name: 'build - Changes to the build process or related scripts',
        value: 'build',
      },
    ],

    allowCustomScopes: true,
    allowEmptyScopes: true,
    issuePrefixes: [{ value: 'closed', name: 'closed:   ISSUES has been processed' }],
    customIssuePrefixAlign: 'top',
    emptyIssuePrefixAlias: 'skip',
    customIssuePrefixAlias: 'custom',
    allowCustomIssuePrefix: true,
    allowEmptyIssuePrefix: true,
    confirmColorize: true,
    scopeOverrides: undefined,
    defaultBody: '',
    defaultIssues: '',
    defaultScope: '',
    defaultSubject: '',
    customScopesAlign: 'bottom',
    customScopesAlias: 'custom',
    emptyScopesAlias: 'empty',
    upperCaseSubject: false,
    markBreakingChangeMode: false,
    allowBreakingChanges: ['feat', 'fix'],
    breaklineNumber: 100,
    breaklineChar: '|',
    skipQuestions: [],
    useEmoji: false,
    emojiAlign: 'center',
    useAI: false,
    aiNumber: 1,
    themeColorCode: '',
    allowCustomScopes: true,
    allowEmptyScopes: true,
  },
  extends: ['@commitlint/config-conventional'],
}
